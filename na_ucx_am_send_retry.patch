diff --git a/src/na/na_ucx.c b/src/na/na_ucx.c
index b14bd91..5dcbee6 100644
--- a/src/na/na_ucx.c
+++ b/src/na/na_ucx.c
@@ -302,7 +302,7 @@ na_ucp_tostr(void *data, enum na_ucp_type datatype);
  */
 static na_return_t
 na_ucp_config_init(
-    const char *tls, const char *net_devices, ucp_config_t **config_p);
+    const char *tls, const char *net_devices, ucp_config_t **config_p, bool listen);
 
 /**
  * Release config.
@@ -1176,7 +1176,7 @@ error:
 /*---------------------------------------------------------------------------*/
 static na_return_t
 na_ucp_config_init(
-    const char *tls, const char *net_devices, ucp_config_t **config_p)
+    const char *tls, const char *net_devices, ucp_config_t **config_p, bool listen)
 {
     ucp_config_t *config = NULL;
     ucs_status_t status;
@@ -1194,6 +1194,15 @@ na_ucp_config_init(
         na_ucs_status_to_na(status), "ucp_config_modify() failed (%s)",
         ucs_status_string(status));
 
+    /* Disable purge on fork for clients */
+    if (!listen) {
+       status = ucp_config_modify(config, "CACHE_PURGE_ON_FORK", "n");
+        NA_CHECK_SUBSYS_ERROR(cls, status != UCS_OK, error, ret,
+            na_ucs_status_to_na(status), "ucp_config_modify() failed (%s)",
+            ucs_status_string(status));
+    }
+
+
     /* Disable backtrace by default */
     if (getenv("UCX_HANDLE_ERRORS") == NULL) {
         status = ucp_config_modify(config, "HANDLE_ERRORS", "none");
@@ -3123,7 +3132,7 @@ na_ucx_initialize(
         expected_size_max ? expected_size_max : NA_UCX_MSG_SIZE_MAX;
 
     /* Init config options */
-    ret = na_ucp_config_init(na_info->protocol_name, net_device, &config);
+    ret = na_ucp_config_init(na_info->protocol_name, net_device, &config, listen);
     NA_CHECK_SUBSYS_NA_ERROR(
         cls, error, ret, "Could not initialize UCX config");
 
